name: Build
on:
  push:
    branches:
      - main

jobs:
  windows-latest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Setting up Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.15.1'
      - name: Preparing release
        run: |
          git config --local user.email "swampdolphin97@github.com"
          git config --local user.name "XHunter"
          pushd ./app
            npx standard-version -a --no-verify --prerelease alpha --skip.commit --skip.tag --skip.changelog
            echo ::set-env name=PACKAGE_VERSION::$(node -p -e "require('./package.json').version")
          popd
          npx standard-version -a --no-verify --prerelease alpha --skip.commit --skip.tag
        env:
          CI: true
  build:
    needs: [windows-latest]
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: $

    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '10.15.0'

      - name: Emit pkgver
        id: pkg
        run: |
          appver=$(node -p -e "require('./app/package.json').version")
          pkgver=$(node -p -e "require('./package.json').version")
          echo ::set-output name=version::$appver
          echo ::set-output name=package_version::$pkgver
        shell: bash
      - name: Manually create the handlebars-directory (Windows only)
        if: matrix.os == 'windows-latest'
        run: New-Item -Path "./source/common/assets" -Name "handlebars" -ItemType "directory" # Hello, PowerShell ._.

      # Perform all necessary pre-build steps (LESS, handlebars, and so forth)
      - name: Set p build environment and compile the assets
        run: |
          npm install
          yarn
      # Now we're set to finally release the beast!
      # WINDOWS ==============================================================
      - name: Build Windows Installer
        if: matrix.os == 'windows-latest' # Only if the job runs on Windows
        run: yarn package-win
      - name: Cache Windows Exe release
        if: matrix.os == 'windows-latest' # Only if the job runs on Windows
        uses: actions/upload-artifact@v1
        with:
          name: Notorious-$.exe
          path: ./release/Notorious Setup $.exe
      - name: Cache Windows MSI release
        if: matrix.os == 'windows-latest' # Only if the job runs on Windows
        uses: actions/upload-artifact@v1
        with:
          name: Notorious-$.msi
          path: ./release/Notorious $.msi

  prepare_release:
    needs: [build] # Make sure (and wait until) the build has succeeded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '10.15.0'
      - name: Retrieve the current package version
        id: pkg
        run: |
          pkgver=$(node -p -e "require('./app/package.json').version")

          echo ::set-output name=version::$pkgver
      - name: Download the Windows asset
        uses: actions/download-artifact@v1
        with:
          name: Notorious-$.exe
          path: .
      - name: Download the AppImage (x32) asset
        uses: actions/download-artifact@v1
        with:
          name: Notorious-$-i386.AppImage
          path: .
      - name: Generate SHA256 checksums
        run: |
          ls -la
          sha256sum "Notorious Setup $.exe" > "SHA256SUMS.txt"
          # sha256sum "Notorious-$.dmg" >> "SHA256SUMS.txt"
          sha256sum "Notorious-$.AppImage" >> "SHA256SUMS.txt"

      - name: Verify checksums
        run: |
          ls -la
          sha256sum -c SHA256SUMS.txt
      - name: Create a new release draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: $ 
        with:
          tag_name: v$ # tag_name is required, but can be overridden during edit
          release_name: Release v$ # release_name is required
          body: If you can read this, we have forgotten to fill in the changelog. Sorry!
          draft: true # Always create as draft, so that we can populate the remaining values easily


      # And finally, upload that shit
      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: $
        with:
          upload_url: $
          asset_path: ./Notorious Setup $.exe
          asset_name: Notorious-$.exe
          asset_content_type: application/x-msdownload
