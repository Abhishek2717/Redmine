{"version":3,"sources":["reportWebVitals.js","pomodoro/songs/alarm.mp3","pomodoro/Footer.js","pomodoro/img/koders.png","pomodoro/pomodoro.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","className","style","color","ipcRenderer","window","require","Pomodoro","countMinutes","totalTime","currTime","ct","split","restSec","parseInt","mints","handleChange","e","setTimeForCode","setState","work","target","value","handleChangeInput","state","time","play","timeType","title","setTime","bind","setTimeForSocial","setTimeForCoffee","reset","alert","elapseTime","this","setDefaultTime","startShortcuts","Notification","requestPermission","format","defaultTime","getTitle","newState","seconds","m","Math","floor","s","type","timeTypes","getFormatTypes","i","length","timeObj","clearInterval","interval","setInterval","restartInterval","resetFor","newTime","Mousetrap","togglePlay","toggleMode","gotoDirection","currentPosition","newMode","item","element","checked","localStorage","setItem","getItem","a","aud","Audio","audio","setTimeout","pause","data","content","formatType","icon","koders","lang","body","timer","send","placeholder","onChange","aria-label","defaultValue","onClick","aria-hidden","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44764865.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/alarm.eaffe612.mp3\";","import React from \"react\";\r\nconst Footer = () => (\r\n    <footer className=\"credits\">\r\n        Made with <i style={{ color: \"red\" }} className=\"fa fa-heart\" /> by\r\n        Koders\r\n        {/* <a\r\n            href=\"https://github.com/afonsopacifer\"\r\n            className=\"link\"\r\n            target=\"_blank\"> */}\r\n        {/* </a> */}\r\n    </footer>\r\n);\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/koders.532f8da8.png\";","import React from \"react\";\r\nimport Mousetrap from \"mousetrap\";\r\nimport \"./style.css\";\r\nimport audio from \"./songs/alarm.mp3\";\r\nimport Footer from \"./Footer\";\r\nimport koders from \"./img/koders.png\";\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\nexport default class Pomodoro extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            time: 0,\r\n            play: false,\r\n            timeType: 0,\r\n            title: \"\",\r\n            work: \"\",\r\n            value: \"\",\r\n        };\r\n        // Bind early, avoid function creation on render loop\r\n        this.setTimeForCode = this.setTime.bind(this, 1500);\r\n        this.setTimeForSocial = this.setTime.bind(this, 1200);\r\n        this.setTimeForCoffee = this.setTime.bind(this, 300);\r\n        this.reset = this.reset.bind(this);\r\n        this.play = this.play.bind(this);\r\n        this.alert = this.alert.bind(this);\r\n        this.elapseTime = this.elapseTime.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDefaultTime();\r\n        this.startShortcuts();\r\n        Notification.requestPermission();\r\n    }\r\n    getTitle(time) {\r\n        time = typeof time === \"undefined\" ? this.state.time : time;\r\n        let _title = this.format(time) + \" | Pomodoro timer\";\r\n        return _title;\r\n    }\r\n\r\n    setDefaultTime() {\r\n        let defaultTime = 1500;\r\n        this.setState({\r\n            time: defaultTime,\r\n            timeType: defaultTime,\r\n            title: this.getTitle(defaultTime),\r\n            play: false,\r\n        });\r\n    }\r\n\r\n    elapseTime() {\r\n        if (this.state.time === 0) {\r\n            this.reset(0);\r\n            this.alert();\r\n        }\r\n        if (this.state.play === true) {\r\n            let newState = this.state.time - 1;\r\n            this.setState({ time: newState, title: this.getTitle(newState) });\r\n        }\r\n    }\r\n\r\n    format(seconds) {\r\n        let m = Math.floor((seconds % 3600) / 60);\r\n        let s = Math.floor((seconds % 3600) % 60);\r\n        let timeFormated =\r\n            (m < 10 ? \"0\" : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s;\r\n        return timeFormated;\r\n    }\r\n\r\n    getFormatTypes() {\r\n        const work = this.state.work ? `Working On ${this.state.work}` : \"Work\";\r\n        return [\r\n            { type: work, time: 1500 },\r\n            { type: \"In a Meeting\", time: 1200 },\r\n            { type: \"On a Break\", time: 300 },\r\n        ];\r\n    }\r\n\r\n    formatType(timeType) {\r\n        let timeTypes = this.getFormatTypes();\r\n        for (let i = 0; i < timeTypes.length; i++) {\r\n            let timeObj = timeTypes[i];\r\n            if (timeObj.time === timeType) {\r\n                return timeObj.type;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    restartInterval() {\r\n        clearInterval(this.interval);\r\n        this.interval = setInterval(this.elapseTime, 1000);\r\n    }\r\n\r\n    play() {\r\n        if (!this.state.value) {\r\n            alert(\"Please enter Title\");\r\n            return;\r\n        }\r\n        if (true === this.state.play) return;\r\n\r\n        this.restartInterval();\r\n\r\n        this.setState({\r\n            play: true,\r\n        });\r\n    }\r\n\r\n    reset(resetFor = this.state.time) {\r\n        clearInterval(this.interval);\r\n        this.format(resetFor);\r\n        this.setState({ play: false });\r\n    }\r\n\r\n    togglePlay() {\r\n        if (true === this.state.play) return this.reset();\r\n\r\n        return this.play();\r\n    }\r\n\r\n    setTime(newTime) {\r\n        this.restartInterval();\r\n        this.setState({\r\n            time: newTime,\r\n            timeType: newTime,\r\n            title: this.getTitle(newTime),\r\n            play: false,\r\n            value: \"\",\r\n        });\r\n    }\r\n\r\n    startShortcuts() {\r\n        Mousetrap.bind(\"space\", this.togglePlay.bind(this));\r\n        Mousetrap.bind(\r\n            [\"ctrl+left\", \"meta+left\"],\r\n            this.toggleMode.bind(this, -1)\r\n        );\r\n        Mousetrap.bind(\r\n            [\"ctrl+right\", \"meta+right\"],\r\n            this.toggleMode.bind(this, 1)\r\n        );\r\n    }\r\n\r\n    toggleMode(gotoDirection) {\r\n        let timeTypes = this.getFormatTypes();\r\n        let currentPosition = -1;\r\n\r\n        for (let i = 0; i < timeTypes.length; i++) {\r\n            if (timeTypes[i].time === this.state.timeType) {\r\n                currentPosition = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (currentPosition !== -1) {\r\n            let newMode = timeTypes[currentPosition + gotoDirection];\r\n            if (newMode) this.setTime(newMode.time);\r\n        }\r\n    }\r\n\r\n    _setLocalStorage(item, element) {\r\n        let value = element.target.checked;\r\n        localStorage.setItem(\"react-pomodoro-\" + item, value);\r\n    }\r\n\r\n    _getLocalStorage(item) {\r\n        return localStorage.getItem(\"react-pomodoro-\" + item) === \"true\"\r\n            ? true\r\n            : false;\r\n    }\r\n    countMinutes = (totalTime, currTime) => {\r\n        const ct = currTime.split(\":\");\r\n        const totalsec = parseInt(ct[0]) * 60 + parseInt(ct[1]);\r\n        const restSec = totalTime - totalsec;\r\n        if (restSec < 60) {\r\n            if (restSec < 10) {\r\n                return \"00:0\" + restSec;\r\n            }\r\n            return \"00:\" + restSec;\r\n        } else {\r\n            const mints = parseInt(restSec / 60);\r\n            const sec = restSec - mints * 60;\r\n            return mints + \":\" + sec;\r\n        }\r\n    };\r\n\r\n    async alert() {\r\n        if (!this.state.value) {\r\n            alert(\"Please Enter Title\");\r\n            return;\r\n        }\r\n        // audio\r\n        let aud = new Audio(audio);\r\n        aud.play();\r\n        setTimeout(() => aud.pause(), 1400);\r\n        const data = {\r\n            content: this.state.value,\r\n            title: this.formatType(this.state.timeType),\r\n        };\r\n\r\n        // notification\r\n        if (this.state.timeType === 1500) {\r\n            new Notification(\"The time is over!\", {\r\n                icon: koders,\r\n                lang: \"en\",\r\n                body: \"Hey, Let's get back to Work.\",\r\n            });\r\n            data.timer = this.countMinutes(1500, this.format(this.state.time));\r\n            this.setTimeForCoffee();\r\n        } else if (this.state.timeType === 1200) {\r\n            new Notification(\"Relax :)\", {\r\n                icon: koders,\r\n                lang: \"en\",\r\n                body: \"Meeting timer is over.\",\r\n            });\r\n            data.timer = this.countMinutes(1200, this.format(this.state.time));\r\n        } else {\r\n            new Notification(\"Relax :)\", {\r\n                icon: koders,\r\n                lang: \"en\",\r\n                body: \"Break timer is over.\",\r\n            });\r\n            data.timer = this.countMinutes(300, this.format(this.state.time));\r\n        }\r\n        ipcRenderer.send(\"webhook\", data);\r\n        this.setDefaultTime();\r\n    }\r\n    handleChange = (e) => {\r\n        this.setTimeForCode();\r\n        this.setState({ work: e.target.value });\r\n    };\r\n    handleChangeInput = (e) => {\r\n        this.setState({ value: e.target.value });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"pomodoro\">\r\n                <div className=\"main\">\r\n                    <div className=\"content display timer\">\r\n                        <span className=\"time\">\r\n                            <h1>Time Tracker</h1>\r\n                            {this.format(this.state.time)}\r\n                        </span>\r\n                        <span className=\"timeType\">\r\n                            {this.formatType(this.state.timeType)}\r\n                            <div className=\"row d-flex justify-content-center\">\r\n                                <input\r\n                                    className=\"form-control col-5 col-sm-3 col-md-4  input\"\r\n                                    placeholder=\"Title\"\r\n                                    value={this.state.value}\r\n                                    onChange={this.handleChangeInput}\r\n                                />\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"content display\">\r\n                        <select\r\n                            className=\"col-2 form-control form-select sel\"\r\n                            aria-label=\"Default select example\"\r\n                            onChange={this.handleChange}>\r\n                            <option defaultValue>Work</option>\r\n                            <option value=\"Development\">Development</option>\r\n                            <option value=\"Designing\">Designing</option>\r\n                            <option value=\"Content Creation\">\r\n                                Content Creation\r\n                            </option>\r\n                            <option value=\"Marketing\">Marketing</option>\r\n                            <option value=\"Planning\">Planning</option>\r\n                            <option value=\"Management\">Management</option>\r\n                        </select>\r\n                        <button\r\n                            className=\"btn btn-primary col-2 ml-2\"\r\n                            onClick={this.setTimeForSocial}>\r\n                            Meetings\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-primary col-2 ml-2\"\r\n                            onClick={this.setTimeForCoffee}>\r\n                            Break\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <i\r\n                            className=\"fa fa-play-circle fa-5x btnIcon\"\r\n                            aria-hidden=\"true\"\r\n                            onClick={this.play}></i>\r\n                        <i\r\n                            className=\"fa fa-pause-circle fa-5x btnIcon\"\r\n                            aria-hidden=\"true\"\r\n                            onClick={this.reset}></i>\r\n                        <i\r\n                            className=\"fa fa-stop-circle fa-5x btnIcon\"\r\n                            aria-hidden=\"true\"\r\n                            onClick={this.alert}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bottomBar\">\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Pomodoro from \"./pomodoro/pomodoro\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Pomodoro />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}